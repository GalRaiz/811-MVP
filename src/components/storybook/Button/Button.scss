@use '../../../styles/variables' as *;
@use 'sass:map';
@use 'sass:color';

// ========================================
// Maps
// ========================================
$button-types: (
  primary: (
    bg: $button-primary-bg,
    color: $text-inverse,
    hover: color.adjust($button-primary-bg, $lightness: 5%),
    border: $border-color,
  ),
  secondary: (
    bg: $secondary-color,
    color: $text-primary,
    hover: color.adjust($secondary-color, $lightness: -5%),
    border: transparent,
  ),
  tertiary: (
    bg: $button-tertiary-bg,
    color: $text-inverse,
    hover: color.adjust($button-tertiary-bg, $lightness: 15%),
    border: $border-color,
  ),
  alert: (
    bg: $error-color,
    color: $text-on-error,
    hover: color.adjust($error-color, $lightness: -10%),
    border: $border-color,
  ),
  success: (
    bg: $highlight-color,
    color: $text-on-highlight,
    hover: color.adjust($highlight-color, $lightness: -10%),
    border: $border-color,
  ),
  warning: (
    bg: $warning-color,
    color: $text-on-warning,
    hover: color.adjust($warning-color, $lightness: -10%),
    border: $border-color,
  ),
  cancel: (
    bg: $secondary-color,
    color: $primary-color,
    hover: color.adjust($secondary-color, $lightness: -10%),
    border: $border-color,
  ),
  info: (
    bg: $notification-color,
    color: $text-on-notification,
    hover: color.adjust($notification-color, $lightness: -10%),
    border: $border-color,
  ),
  transparent-on-light: (
    bg: transparent,
    color: $text-color,
    hover: $text-muted,
    border: transparent,
  ),
  transparent-on-dark: (
    bg: transparent,
    color: $text-inverse,
    hover: $text-muted,
    border: transparent,
  ),
  icon-only: (
    bg: #f3f4f6,
    color: #6b7280,
    hover: #e5e7eb,
    border: transparent,
  ),
  close: (
    bg: #f3f4f6,
    color: #6b7280,
    hover: #e5e7eb,
    border: transparent,
  ),
  unselected: (
    bg: $button-unselected-bg,
    color: $text-primary,
    hover: color.adjust($button-unselected-bg, $lightness: -5%),
    border: transparent,
  ),
  selected: (
    bg: $button-selected-bg,
    color: $text-primary,
    hover: color.adjust($button-unselected-bg, $lightness: -5%),
    border: $border-line,
  ),
);

$button-sizes: (
  small: (
    padding: $padding-small $padding-normal,
    font-size: 12px,
  ),
  medium: (
    padding: $padding-normal $padding-medium,
    font-size: 14px,
  ),
  large: (
    padding: $padding-medium $padding-large,
    font-size: 16px,
  ),
);

// ========================================
// Mixins
// ========================================
@mixin button-type($props) {
  background-color: map.get($props, bg);
  color: map.get($props, color);
  border: 1px solid map.get($props, border);
  cursor: pointer;
  box-shadow: $box-shadow;

  &:hover:not(:disabled):not(.btn--disabled) {
    background-color: map.get($props, hover);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
  }

  &:disabled,
  &.btn--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
    box-shadow: none;
  }
}

@mixin button-size($props) {
  padding: map.get($props, padding);
  font-size: map.get($props, font-size);
}

// ========================================
// Base Button
// ========================================
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: $border-radius;
  font-weight: 500;
  gap: $padding-small;
  transition: all 0.2s ease;

  // Types
  @each $type, $props in $button-types {
    &--#{$type} {
      @include button-type($props);
    }
  }

  // Sizes
  @each $size, $props in $button-sizes {
    &--#{$size} {
      @include button-size($props);
    }
  }

  // Full width
  &--fullWidth {
    width: 100%;
  }

  // Icon inside button
  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    & + .btn__text {
      margin-left: $padding-small;
    }
  }

  // Icon on the right
  &--icon-right {
    flex-direction: row-reverse;

    .btn__icon + .btn__text {
      margin-left: 0;
      margin-right: $padding-small;
    }
  }

  // Text inside button
  &__text {
    display: inline-flex;
    align-items: center;
  }

  // Icon-only button specific
  &--icon-only {
    width: 24px;
    height: 24px;
    padding: 0;
    border-radius: 50%;
    min-width: 24px;
    min-height: 24px;
  }

  // Close button specific
  &--close {
    width: 32px;
    height: 32px;
    padding: 0;
    border-radius: 6px;
    min-width: 32px;
    min-height: 32px;
  }
}
